// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchRepositoriesGitHUB.Repositories;

namespace SearchRepositoriesGitHUB.Repositories.Migrations
{
    [DbContext(typeof(SearchRepositoriesGitHUBDBContext))]
    partial class SearchRepositoriesGitHUBDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SearchRepositoriesGitHUB.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArchiveUrl");

                    b.Property<bool>("Archived");

                    b.Property<string>("AssigneesUrl");

                    b.Property<string>("BlobsUrl");

                    b.Property<string>("BranchesUrl");

                    b.Property<string>("CloneUrl");

                    b.Property<string>("CollaboratorsUrl");

                    b.Property<string>("CommentsUrl");

                    b.Property<string>("CommitsUrl");

                    b.Property<string>("CompareUrl");

                    b.Property<string>("ContentsUrl");

                    b.Property<string>("ContributorsUrl");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("DefaultBranch");

                    b.Property<string>("DeploymentsUrl");

                    b.Property<string>("Description");

                    b.Property<bool>("Disabled");

                    b.Property<string>("DownloadsUrl");

                    b.Property<string>("EventsUrl");

                    b.Property<bool>("Fork");

                    b.Property<long>("Forks");

                    b.Property<long>("ForksCount");

                    b.Property<string>("ForksUrl");

                    b.Property<string>("FullName");

                    b.Property<string>("GitCommitsUrl");

                    b.Property<string>("GitRefsUrl");

                    b.Property<string>("GitTagsUrl");

                    b.Property<string>("GitUrl");

                    b.Property<bool>("HasDownloads");

                    b.Property<bool>("HasIssues");

                    b.Property<bool>("HasPages");

                    b.Property<bool>("HasProjects");

                    b.Property<bool>("HasWiki");

                    b.Property<string>("Homepage");

                    b.Property<string>("HooksUrl");

                    b.Property<string>("HtmlUrl");

                    b.Property<long>("IdGitHub");

                    b.Property<string>("IssueCommentUrl");

                    b.Property<string>("IssueEventsUrl");

                    b.Property<string>("IssuesUrl");

                    b.Property<string>("KeysUrl");

                    b.Property<string>("LabelsUrl");

                    b.Property<string>("Language");

                    b.Property<string>("LanguagesUrl");

                    b.Property<string>("MergesUrl");

                    b.Property<string>("MilestonesUrl");

                    b.Property<string>("MirrorUrl");

                    b.Property<string>("Name");

                    b.Property<string>("NodeId");

                    b.Property<string>("NotificationsUrl");

                    b.Property<long>("OpenIssues");

                    b.Property<long>("OpenIssuesCount");

                    b.Property<long?>("OwnerId");

                    b.Property<bool>("Private");

                    b.Property<string>("PullsUrl");

                    b.Property<DateTimeOffset>("PushedAt");

                    b.Property<string>("ReleasesUrl");

                    b.Property<double>("Score");

                    b.Property<long>("Size");

                    b.Property<string>("SshUrl");

                    b.Property<long>("StargazersCount");

                    b.Property<string>("StargazersUrl");

                    b.Property<string>("StatusesUrl");

                    b.Property<string>("SubscribersUrl");

                    b.Property<string>("SubscriptionUrl");

                    b.Property<string>("SvnUrl");

                    b.Property<string>("TagsUrl");

                    b.Property<string>("TeamsUrl");

                    b.Property<string>("TreesUrl");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<string>("Url");

                    b.Property<long>("Watchers");

                    b.Property<long>("WatchersCount");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SearchRepositoriesGitHUB.Models.Owner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl");

                    b.Property<string>("EventsUrl");

                    b.Property<string>("FollowersUrl");

                    b.Property<string>("FollowingUrl");

                    b.Property<string>("GistsUrl");

                    b.Property<string>("GravatarId");

                    b.Property<string>("HtmlUrl");

                    b.Property<long>("IdGitHub");

                    b.Property<string>("Login");

                    b.Property<string>("NodeId");

                    b.Property<string>("OrganizationsUrl");

                    b.Property<string>("ReceivedEventsUrl");

                    b.Property<string>("ReposUrl");

                    b.Property<bool>("SiteAdmin");

                    b.Property<string>("StarredUrl");

                    b.Property<string>("SubscriptionsUrl");

                    b.Property<string>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("SearchRepositoriesGitHUB.Models.Item", b =>
                {
                    b.HasOne("SearchRepositoriesGitHUB.Models.Owner", "Owner")
                        .WithMany("ItemsRepositorios")
                        .HasForeignKey("OwnerId");
                });
#pragma warning restore 612, 618
        }
    }
}
